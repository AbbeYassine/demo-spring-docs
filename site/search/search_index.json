{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Initialisation du Projet Allez vers SPRING INITIALIZR Gradle Config Ajouter org.springframework.boot:spring-boot-starter-web dans le fichier build.gradle dans la section dependencies dependencies { compile ( \"org.springframework.boot:spring-boot-starter-web\" ) implementation 'org.springframework.boot:spring-boot-starter' testImplementation 'org.springframework.boot:spring-boot-starter-test' } Notre 1\u00e9re Web Service Cr\u00e9er la classe HelloController.java contenant le code suivant: import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class HelloController { @RequestMapping ( \"/\" ) public String index () { return \"Hello World !!!\" ; } } Info Vous remarquez que la r\u00e9ponse est sous format String, Comment on fait pour devenir sous format JSON ? R\u00e9ponse JSON Cr\u00e9er la classe SimpleResponse.java contenant le code suivant: public class SimpleResponse { private String message ; public SimpleResponse ( String message ) { this . message = message ; } public String getMessage () { return message ; } public void setMessage ( String message ) { this . message = message ; } } Ajoutant une autre m\u00e9thode nomm\u00e9 indexJson() dans notre controller: @RequestMapping ( \"/json\" ) public SimpleResponse indexJson () { return new SimpleResponse ( \"Hello World\" ); } Tester le projet Vous pouvez maintenant tester nos web services sur http://localhost:8080","title":"Initialisation du Projet"},{"location":"#initialisation-du-projet","text":"Allez vers SPRING INITIALIZR","title":"Initialisation du Projet"},{"location":"#gradle-config","text":"Ajouter org.springframework.boot:spring-boot-starter-web dans le fichier build.gradle dans la section dependencies dependencies { compile ( \"org.springframework.boot:spring-boot-starter-web\" ) implementation 'org.springframework.boot:spring-boot-starter' testImplementation 'org.springframework.boot:spring-boot-starter-test' }","title":"Gradle Config"},{"location":"#notre-1ere-web-service","text":"Cr\u00e9er la classe HelloController.java contenant le code suivant: import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class HelloController { @RequestMapping ( \"/\" ) public String index () { return \"Hello World !!!\" ; } } Info Vous remarquez que la r\u00e9ponse est sous format String, Comment on fait pour devenir sous format JSON ?","title":"Notre 1\u00e9re Web Service"},{"location":"#reponse-json","text":"Cr\u00e9er la classe SimpleResponse.java contenant le code suivant: public class SimpleResponse { private String message ; public SimpleResponse ( String message ) { this . message = message ; } public String getMessage () { return message ; } public void setMessage ( String message ) { this . message = message ; } } Ajoutant une autre m\u00e9thode nomm\u00e9 indexJson() dans notre controller: @RequestMapping ( \"/json\" ) public SimpleResponse indexJson () { return new SimpleResponse ( \"Hello World\" ); }","title":"R\u00e9ponse JSON"},{"location":"#tester-le-projet","text":"Vous pouvez maintenant tester nos web services sur http://localhost:8080","title":"Tester le projet"}]}